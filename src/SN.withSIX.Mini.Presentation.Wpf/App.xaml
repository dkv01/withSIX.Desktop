<wpf1:SingleInstanceApp x:Class="SN.withSIX.Mini.Presentation.Wpf.App"
                        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                        xmlns:system="clr-namespace:System;assembly=mscorlib"
                        xmlns:wpf1="clr-namespace:SN.withSIX.Core.Presentation.Wpf;assembly=SN.withSIX.Core.Presentation.Wpf"
                        xmlns:behaviors="clr-namespace:SN.withSIX.Core.Presentation.Wpf.Behaviors;assembly=SN.withSIX.Core.Presentation.Wpf"
                        xmlns:applications="clr-namespace:SN.withSIX.Core.Applications;assembly=SN.withSIX.Core.Applications">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- Not using MahApps.Metro.xaml because of overrides?? -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Cobalt.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />

                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/flatbutton.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/SN.withSIX.Core.Presentation.Wpf;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/SN.withSIX.Core.Presentation.Wpf;component/Styles/Accents/BaseOverrides.xaml" />

                <ResourceDictionary
                    Source="pack://application:,,,/SN.withSIX.Core.Presentation.Wpf;component/Styles/CoreConverters.xaml" />
                <ResourceDictionary
                    Source="Styles/CoreOverrides.xaml" />
                <ResourceDictionary
                    Source="Styles/CoreButtons.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type UserControl}" x:Key="ItemUserControl"
                   BasedOn="{StaticResource {x:Type UserControl}}">
                <Setter Property="Margin" Value="4" />
                <Setter Property="Height" Value="48" />
                <Setter Property="Background" Value="Transparent" />
            </Style>


            <Style TargetType="{x:Type controls:MetroWindow}"
                   BasedOn="{StaticResource {x:Type controls:MetroWindow}}"
                   x:Key="WindowStyle">
                <Setter Property="Background" Value="{StaticResource SixSoftGray}" />
                <Setter Property="ShowTitleBar" Value="False" />
                <Setter Property="ShowMaxRestoreButton" Value="False" />
                <Setter Property="ShowMinButton" Value="False" />
                <Setter Property="Icon" Value="app.ico" />
            </Style>

            <Style TargetType="{x:Type controls:MetroWindow}"
                   BasedOn="{StaticResource WindowStyle}"
                   x:Key="SettingsWindowStyle">
                <Style.Resources>
                    <system:Double x:Key="Width">800</system:Double>
                    <system:Double x:Key="Height">600</system:Double>
                </Style.Resources>
                <Setter Property="GlowBrush" Value="{StaticResource SixLightGray}" />
                <Setter Property="Title" Value="{Binding DisplayName}" />
                <Setter Property="MinWidth" Value="{StaticResource Width}" />
                <Setter Property="MaxWidth" Value="{StaticResource Width}" />
                <Setter Property="Width" Value="{StaticResource Width}" />
                <Setter Property="MinHeight" Value="{StaticResource Height}" />
                <Setter Property="MaxHeight" Value="{StaticResource Height}" />
                <Setter Property="Height" Value="{StaticResource Height}" />
                <!-- <Setter Property="WindowStartupLocation" Value="CenterScreen" /> -->
                <Setter Property="ResizeMode" Value="CanMinimize" />
                <!-- <Setter Property="behaviors:WindowLocationBehavior.TaskbarLocation" Value="True" /> -->
            </Style>

            <system:Double x:Key="HeaderFontSize">24</system:Double>
            <system:Double x:Key="MastHeaderFontSize">32</system:Double>

            <system:Double x:Key="MainWindowMinWidth">848</system:Double>
            <system:Double x:Key="MainWindowMinHeight">480</system:Double>
            <system:Double x:Key="HintFontSize">24</system:Double>

            <Style x:Key="FavoriteButtonStyle" BasedOn="{StaticResource ImageButtonStyle}" TargetType="Button">
                <Setter Property="Background" Value="White" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="{StaticResource IconFont}" />
                <Setter Property="FontSize" Value="{StaticResource HintFontSize}" />
                <Setter Property="Content" Value="{x:Static applications:SixIconFont.withSIX_icon_Star}" />
                <!-- TODO: Toggle between Star and Star_Outline ?? -->
            </Style>

            <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource MetroListBox}">
                <!--<Setter Property="Background" Value="Transparent" />-->
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                <!--<Setter Property="IsSynchronizedWithCurrentItem" Value="True" />-->
                <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
                <Setter Property="VirtualizingPanel.IsContainerVirtualizable" Value="True" />
                <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
                <!-- Using Margin in GroupStyle causes scroll freeze http://connect.microsoft.com/VisualStudio/feedback/details/765682/freeze-when-using-virtualizingpanel-isvirtualizingwhengrouping-on-wpf-datagrid -->
                <Setter Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="True" />
                <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
                <Setter Property="behaviors:ListBoxExtenders.AutoScrollToCurrentItem" Value="True" />
                <!--  Causes issues on rendering in Chat messages, so disabled there.
              Also doesn't seem to help memory usage significantly when scrolling through large lists,
              But definitely appears to improve scrolling performance -->
            </Style>

            <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MetroListBoxItem}">
                <!--<Setter Property="BorderThickness" Value="0 0 0 4" />-->
                <!-- use at bottom for the selection awesome effect -->
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <!--<Setter Property="Background" Value="{DynamicResource WhiteBrush}" />-->
                <Setter Property="Padding" Value="0" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <!-- <Setter Property="HorizontalContentAlignment" Value="Stretch" /> -->
                <!--                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected"
                                 Value="True">
                                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush}" />
                                            <Setter Property="Foreground"
                                    Value="{DynamicResource IdealForegroundColorBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver"
                                 Value="True">
                                            <Setter TargetName="Border"
                                    Property="BorderBrush" Value="{DynamicResource AccentColorBrush3}" />
                                            ~1~                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush3}" />@1@

                                            ~1~
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush3}" />
@1@
                                        </Trigger>
                                        <Trigger Property="IsEnabled"
                                 Value="False">
                                            <Setter Property="Foreground"
                                    Value="{DynamicResource GrayBrush7}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsEnabled"
                                           Value="False" />
                                                <Condition Property="IsSelected"
                                           Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource GrayBrush7}" />
                                            <Setter Property="Foreground"
                                    Value="{DynamicResource AccentSelectedColorBrush}" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected"
                                           Value="True" />
                                                <Condition Property="Selector.IsSelectionActive"
                                           Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush2}" />
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>-->
            </Style>


            <Style x:Key="NonFocusableListBoxItemStyle" BasedOn="{StaticResource {x:Type ListBoxItem}}"
                   TargetType="{x:Type ListBoxItem}">
                <Setter Property="Focusable" Value="False" />
            </Style>

            <Style x:Key="ListBoxStyle" TargetType="{x:Type ListBox}"
                   BasedOn="{StaticResource {x:Type ListBox}}">
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type ListBoxItem}"
                               BasedOn="{StaticResource NonFocusableListBoxItemStyle}">
                            <Setter Property="Background" Value="{StaticResource SixSoftGray}" />
                            <Setter Property="Margin" Value="4 2" />
                            <!--                        <Setter Property="BorderThickness" Value="0 0 0 4" />
                        <Setter Property="BorderBrush" Value="{StaticResource SixSoftGray}" /> -->
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</wpf1:SingleInstanceApp>