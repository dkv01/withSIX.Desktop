<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:resources="clr-namespace:SN.withSIX.Mini.Presentation.Wpf.Resources"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary
            Source="pack://application:,,,/SN.withSIX.Core.Presentation.Wpf;component/Styles/CoreColors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <resources:IconFontFamily x:Key="IconFont" />
    <resources:UbuntuLightFontFamily x:Key="UbuntuLightFont" />
    <resources:UbuntuFontFamily x:Key="UbuntuFont" />

    <Style TargetType="{x:Type Window}">
        <!-- <Setter Property="FontWeight" Value="Light" /> -->
        <Setter Property="FontFamily" Value="{StaticResource UbuntuLightFont}" />
    </Style>

    <!-- for design time -->
    <Style TargetType="{x:Type UserControl}">
        <!-- <Setter Property="FontWeight" Value="Light" /> -->
        <Setter Property="FontFamily" Value="{StaticResource UbuntuLightFont}" />
    </Style>

    <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource MetroToolTip}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel>
                        <TextBlock Text="{Binding}"
                                   MaxWidth="600"
                                   TextWrapping='Wrap' />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Content" Value="{x:Static sys:String.Empty}">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="Content" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1"
                               StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuItemBase" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
        <Style.Resources>
            <SolidColorBrush Color="{StaticResource SixGrayColor}" x:Key="HighlightBrush" />
            <Style TargetType="{x:Type Path}">
                <Setter Property="Fill" Value="White" />
            </Style>
            <Style TargetType="Separator">
                <Setter Property="Foreground" Value="{StaticResource SixLightGray}" />
            </Style>
        </Style.Resources>
        <Setter Property="Icon" Value="{Binding Icon, Converter={StaticResource IconControlConverter}}" />
        <Setter Property="Visibility"
                Value="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />

        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Command" Value="{Binding Command}" />
        <Setter Property="IsCheckable" Value="{Binding IsCheckable}" />
        <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
        <Setter Property="IsChecked" Value="{Binding IsChecked}" />
        <Setter Property="ItemsSource" Value="{Binding Items}" />
        <Setter Property="IsSubmenuOpen" Value="{Binding IsOpen}" />
    </Style>

    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MenuItemBase}">
        <Setter Property="Header" Value="{Binding Name, Mode=OneWay}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSeparator}" Value="True">
                <Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Separator />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ContextMenuBase" TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource {x:Type ContextMenu}}">
        <!--
        <Setter Property="Background" Value="{StaticResource SixDarkGray}" />
        <Setter Property="Foreground" Value="{StaticResource SixLightGray}" />
        <Setter Property="BorderBrush" Value="{StaticResource SixDarkGray}" />
        -->
        <Setter Property="IsOpen" Value="{Binding IsOpen}" />
        <Setter Property="ItemsSource" Value="{Binding Items}" />
        <Setter Property="Padding" Value="0" />
        <Style.Resources>
            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                <Setter Property="CommandParameter"
                        Value="{Binding DataContext.CurrentItem, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}" />
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource ContextMenuBase}" />

    <Style x:Key="MenuBase" TargetType="{x:Type Menu}" BasedOn="{StaticResource {x:Type Menu}}">
        <!--
        <Setter Property="Background" Value="{StaticResource SixDarkGray}" />
        <Setter Property="Foreground" Value="{StaticResource SixLightGray}" />
        <Setter Property="BorderBrush" Value="{StaticResource SixDarkGray}" />
        -->
        <!--<Setter Property="IsOpen" Value="{Binding IsOpen}" />-->
        <Setter Property="ItemsSource" Value="{Binding Items}" />
        <Setter Property="Padding" Value="0" />
        <Style.Resources>
            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                <Setter Property="CommandParameter"
                        Value="{Binding DataContext.CurrentItem, RelativeSource={RelativeSource FindAncestor, AncestorType=Menu}}" />
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="{x:Type Menu}" BasedOn="{StaticResource MenuBase}" />
</ResourceDictionary>