<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls2="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Six.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ShellViewStyleOld" TargetType="{x:Type controls2:MetroWindow}"
           BasedOn="{StaticResource {x:Type controls2:MetroWindow}}">
        <Setter Property="ShowTitleBar" Value="False" />
        <Setter Property="Icon" Value="/app.ico" />
        <Setter Property="Width" Value="{Binding Width,FallbackValue=1024,Mode=TwoWay}" />
        <Setter Property="MinWidth" Value="{Binding MinWidth,FallbackValue=1024,Mode=TwoWay}" />
        <Setter Property="MaxWidth" Value="{Binding MaxWidth,Mode=TwoWay}" />
        <Setter Property="Height" Value="{Binding Height,FallbackValue=684,Mode=TwoWay}" />
        <Setter Property="Top" Value="{Binding Top,FallbackValue=0,Mode=TwoWay}" />
        <Setter Property="MinHeight" Value="684" />
        <Setter Property="Left" Value="{Binding Left,Mode=TwoWay}" />
        <Setter Property="WindowState" Value="{Binding WindowState,Mode=TwoWay}" />
    </Style>

    <Style x:Key="TabItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="3,3,3,1" SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1" StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#8C8E94" />
    <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#F3F3F3" Offset="0" />
        <GradientStop Color="#EBEBEB" Offset="0.5" />
        <GradientStop Color="#DDDDDD" Offset="0.5" />
        <GradientStop Color="#CDCDCD" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabItemHotBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#EAF6FD" Offset="0.15" />
        <GradientStop Color="#D9F0FC" Offset=".5" />
        <GradientStop Color="#BEE6FD" Offset=".5" />
        <GradientStop Color="#A7D9F5" Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabItemSelectedBackground" Color="#EFEFEF" />
    <SolidColorBrush x:Key="TabItemHotBorderBrush" Color="#3C7FB1" />
    <SolidColorBrush x:Key="TabItemDisabledBackground" Color="#F4F4F4" />
    <SolidColorBrush x:Key="TabItemDisabledBorderBrush" Color="#FFC9C7BA" />

    <Style x:Key="SixTabItem" TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}" />
        <Setter Property="Padding" Value="6,1,6,1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{StaticResource SixLightGray}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1,1,1,0"
                                Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="Content" ContentSource="Header" Height="29" MinWidth="40"
                                              HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource TabItemHotBackground}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource SixSoftGray}" />
                        </Trigger>
                        <!-- 
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd"
                                    Value="{StaticResource TabItemHotBorderBrush}" />
                        </MultiTrigger>
                        -->
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource TabItemDisabledBackground}" />
                            <Setter Property="BorderBrush" TargetName="Bd"
                                    Value="{StaticResource TabItemDisabledBorderBrush}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"
                                                  MinWidth="16" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <!--
                             Note that the following do not work, but I believe the top 2 should?!
                             <ToggleButton IsChecked="{TemplateBinding IsExpanded}" ClickMode="Press" Name="Expander">
                             <ToggleButton IsChecked="{TemplateBinding Property=IsExpanded}" ClickMode="Press" Name="Expander">
                             <ToggleButton IsChecked="{TemplateBinding Path=IsExpanded}" ClickMode="Press" Name="Expander">
                        -->
                            <Border x:Name="Bd2"
                                    HorizontalAlignment="Stretch"
                                    BorderThickness="{TemplateBinding Border.BorderThickness}"
                                    BorderBrush="{TemplateBinding Border.BorderBrush}"
                                    Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Panel.Background}"
                                    SnapsToDevicePixels="True"
                                    Grid.Column="0">
                                <ToggleButton
                                    IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                    ClickMode="Press"
                                    x:Name="Expander">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="Focusable"
                                                    Value="false" />
                                            <Setter Property="Width"
                                                    Value="16" />
                                            <Setter Property="Height"
                                                    Value="16" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Border Padding="5,5,5,5"
                                                                Background="#00FFFFFF"
                                                                Width="16"
                                                                Height="16">
                                                            <Path Fill="#00FFFFFF"
                                                                  Stroke="#FF989898"
                                                                  x:Name="ExpandPath">
                                                                <Path.Data>
                                                                    <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                                </Path.Data>
                                                                <Path.RenderTransform>
                                                                    <RotateTransform Angle="135"
                                                                                     CenterX="3"
                                                                                     CenterY="3" />
                                                                </Path.RenderTransform>
                                                            </Path>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver"
                                                                     Value="True">
                                                                <Setter TargetName="ExpandPath"
                                                                        Property="Stroke"
                                                                        Value="#FF1BBBFA" />
                                                                <Setter TargetName="ExpandPath"
                                                                        Property="Fill"
                                                                        Value="#00FFFFFF" />
                                                            </Trigger>
                                                            <Trigger Property="IsChecked"
                                                                     Value="True">
                                                                <Setter TargetName="ExpandPath"
                                                                        Property="RenderTransform">
                                                                    <Setter.Value>
                                                                        <RotateTransform Angle="180"
                                                                                         CenterX="3"
                                                                                         CenterY="3" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter TargetName="ExpandPath"
                                                                        Property="Fill"
                                                                        Value="#FF595959" />
                                                                <Setter TargetName="ExpandPath"
                                                                        Property="Stroke"
                                                                        Value="#FF262626" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </Border>
                            <Border x:Name="Bd"
                                    HorizontalAlignment="Stretch"
                                    BorderThickness="{TemplateBinding Border.BorderThickness}"
                                    BorderBrush="{TemplateBinding Border.BorderBrush}"
                                    Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Panel.Background}"
                                    SnapsToDevicePixels="True"
                                    Grid.Column="1">
                                <ContentPresenter x:Name="PART_Header"
                                                  Content="{TemplateBinding HeaderedContentControl.Header}"
                                                  ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                                  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                  ContentSource="Header"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost"
                                            Grid.Column="1"
                                            Grid.Row="1" />
                        </Grid>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource AccentColorBrush3}" />
                        </Trigger>
                        <Trigger Property="IsExpanded"
                                 Value="False">
                            <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems"
                                 Value="False">
                            <Setter TargetName="Expander"
                                    Property="Visibility"
                                    Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter TargetName="Bd"
                                    Property="Panel.Background"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter TargetName="Bd2"
                                    Property="Panel.Background"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter Property="TextElement.Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="True" />
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Panel.Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter TargetName="Bd2"
                                    Property="Panel.Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="TextElement.Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="TextElement.Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>