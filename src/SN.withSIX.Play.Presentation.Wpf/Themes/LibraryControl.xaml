<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cal="http://www.caliburnproject.org"
                    xmlns:dragDrop="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
                    xmlns:converters="http://metro.mahapps.com/winfx/xaml/shared"
                    xmlns:converters1="clr-namespace:SN.withSIX.Core.Presentation.Wpf.Converters;assembly=SN.withSIX.Core.Presentation.Wpf"
                    xmlns:controls="clr-namespace:SN.withSIX.Play.Presentation.Wpf.Views.Controls"
                    xmlns:core="clr-namespace:SN.withSIX.Core.Applications;assembly=SN.withSIX.Core.Applications">

    <converters1:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter" />
    <converters1:NotNullToVisibilityConverter x:Key="NotNullToVisibilityConverter" />
    <converters1:AreEqualConverter x:Key="AreEqualConverter" />
    <converters1:NonZeroToVisibilityCollapsedConverter x:Key="NonZeroToVisibilityCollapsedConverter" />

    <Style TargetType="{x:Type controls:LibraryControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:LibraryControl}">
                    <ControlTemplate.Resources>
                        <ContextMenu x:Key="TreeContextMenu"
                                     DataContext="{Binding PlacementTarget.Tag.ContextMenu, RelativeSource={RelativeSource Self}}" />
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="220" MinWidth="200" MaxWidth="400" />
                            <ColumnDefinition Width="2" />
                            <ColumnDefinition Width="16" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <GridSplitter Grid.Column="1" Width="4" Foreground="{TemplateBinding Foreground}"
                                      HorizontalAlignment="Center" VerticalAlignment="Stretch"
                                      Background="{DynamicResource SixLightGray}"
                                      Visibility="{Binding NavigationVisible, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"
                                      Margin="0 84 0 16" />

                        <ContentControl Grid.Column="3" Content="{TemplateBinding SelectedItem}"
                                        ContentTemplate="{TemplateBinding ItemDetailTemplate}"
                                        Foreground="{TemplateBinding Foreground}">
                            <ContentControl.Style>
                                <Style TargetType="{x:Type ContentControl}">
                                    <Setter Property="Grid.Column" Value="0" />
                                    <Setter Property="Grid.ColumnSpan" Value="4" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding NavigationVisible}" Value="True">
                                            <Setter Property="Grid.Column" Value="3" />
                                            <Setter Property="Grid.ColumnSpan" Value="1" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>

                        <TabControl Margin="0 6 0 0" Grid.Column="0" x:Name="Tc"
                                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                    Foreground="{TemplateBinding Foreground}">
                            <TabControl.Style>
                                <Style TargetType="{x:Type TabControl}">
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding NavigationVisible}" Value="False">
                                            <Setter Property="VerticalAlignment" Value="Top" />
                                            <Setter Property="Height" Value="26" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TabControl.Style>
                            <TabControl.Resources>
                                <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
                                    <Setter Property="Foreground"
                                            Value="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=TabControl}}" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type TabItem}">
                                                <Grid SnapsToDevicePixels="true" Margin="2 0 2 0">
                                                    <ContentPresenter x:Name="Content" ContentSource="Header"
                                                                      Height="22"
                                                                      HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                                      RecognizesAccessKey="True"
                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                      VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="HeaderTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <!--  MouseDown="UIElement_OnMouseDown" -->
                                                <Grid Background="Transparent">
                                                    <Grid.Style>
                                                        <Style TargetType="{x:Type Grid}">
                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Cursor" Value="Hand" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Grid.Style>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition />
                                                        <RowDefinition Height="Auto" />
                                                    </Grid.RowDefinitions>
                                                    <ContentPresenter Content="{TemplateBinding Content}"
                                                                      Margin="8 0 8 4" />
                                                    <Border BorderThickness="0 0 0 2" Grid.Row="1">
                                                        <Border.Style>
                                                            <Style TargetType="{x:Type Border}">
                                                                <Setter Property="BorderBrush"
                                                                        Value="{DynamicResource SixGray}" />
                                                                <Style.Triggers>
                                                                    <DataTrigger
                                                                        Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}}"
                                                                        Value="True">
                                                                        <Setter Property="BorderBrush"
                                                                                Value="{DynamicResource AccentColorBrush}" />
                                                                    </DataTrigger>
                                                                    <DataTrigger
                                                                        Binding="{Binding DataContext.NavigationVisible, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:LibraryControl}}}"
                                                                        Value="False">
                                                                        <Setter Property="BorderBrush"
                                                                                Value="{DynamicResource SixGray}" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                    </Border>
                                                </Grid>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>

                                <Style x:Key="TabItemHeaderTextStyle"
                                       TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">

                                    <Style.Triggers>
                                        <!--                        <DataTrigger
                            Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}}"
                            Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                        </DataTrigger>-->
                                        <DataTrigger
                                            Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}}"
                                            Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding NavigationVisible}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>

                                <Style x:Key="TabItemHeaderIconStyle" TargetType="{x:Type TextBlock}">
                                    <Setter Property="FontFamily" Value="{DynamicResource IconFont}" />
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="FontSize" Value="14" />
                                    <!--
                    <Style.Triggers>
                        <DataTrigger
                                    Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}}"
                                    Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                        </DataTrigger>
                    </Style.Triggers>
-->
                                </Style>

                                <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource {x:Type ScrollBar}}">
                                    <Style.Triggers>
                                        <Trigger Property="Orientation" Value="Horizontal">
                                            <Setter Property="Width" Value="Auto" />
                                            <Setter Property="Height" Value="4" />
                                            <Setter Property="Template" Value="{DynamicResource HorizontalScrollBar}" />
                                        </Trigger>
                                        <Trigger Property="Orientation" Value="Vertical">
                                            <Setter Property="Width" Value="4" />
                                            <Setter Property="Height" Value="Auto" />
                                            <Setter Property="Template" Value="{DynamicResource VerticalScrollBar}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TabControl.Resources>

                            <TabItem ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                <TabItem.Header>
                                    <DockPanel>
                                        <Border ToolTip="{Binding Text, ElementName=tbNavigate}"
                                                Background="Transparent">
                                            <TextBlock Style="{DynamicResource TabItemHeaderIconStyle}"
                                                       Text="{x:Static core:SixIconFont.withSIX_icon_Share_Lines}" />
                                        </Border>
                                        <TextBlock x:Name="tbNavigate" Text="Navigate" Margin="4 0 0 0"
                                                   VerticalAlignment="Center"
                                                   Style="{DynamicResource TabItemHeaderTextStyle}" />
                                    </DockPanel>
                                </TabItem.Header>

                                <Grid Margin="0 6 0 0">
                                    <!--
                    Groups: each have their own distinct icon, and should have an appropriate 'Add' button at the bottom right
                        Bundles  ^
                        Local   ^
                        Online  ^
                        
                    Elements per group: each have their own icon - status related
                    -->
                                    <!-- this is the itemssource throwing the destination array too small exception, probably the Children for CustomRepos... -->
                                    <DockPanel>
                                        <TreeView ItemsSource="{TemplateBinding ItemsSource}"
                                                  HorizontalAlignment="Stretch" DockPanel.Dock="Top"
                                                  Background="Transparent" Foreground="{TemplateBinding Foreground}"
                                                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                  BorderThickness="0" BorderBrush="Transparent"
                                                  cal:Message.Attach="[Event SelectedItemChanged] = [Action OnSelectedItemChanged($eventArgs)]; [Event MouseDoubleClick] = [Action DoubleClickedTV($eventArgs)]; [Event PreviewMouseRightButtonDown] = [Action OnPreviewMouseRightButtonDown($eventArgs)]"
                                                  HorizontalContentAlignment="Stretch"
                                                  dragDrop:DragDrop.IsDropTarget="True"
                                                  dragDrop:DragDrop.IsDragSource="True"
                                                  dragDrop:DragDrop.DropHandler="{Binding}"
                                                  ItemTemplate="{TemplateBinding ItemTemplate}">
                                            <TreeView.Resources>
                                                <ControlTemplate TargetType="{x:Type GroupItem}"
                                                                 x:Key="DefaultTemplate">
                                                    <Expander IsExpanded="True" HorizontalAlignment="Stretch"
                                                              HorizontalContentAlignment="Stretch"
                                                              Style="{DynamicResource ExpanderStyle}">
                                                        <Expander.Header>
                                                            <DockPanel>
                                                                <TextBlock Text="{Binding Name.Icon}"
                                                                           Style="{DynamicResource TextBlockIconStyle}"
                                                                           FontSize="16"
                                                                           Visibility="{Binding Name, Converter={StaticResource NotNullToVisibilityConverter}}" />
                                                                <TextBlock Margin="4 0 0 0">
                                                                    <Run
                                                                        Text="{Binding Name.Header, Mode=OneWay, Converter={converters:ToUpperConverter}}" />
                                                                    <Run
                                                                        Text="{Binding Items.Count, Mode=OneWay, StringFormat=[\{0\}]}" />
                                                                </TextBlock>
                                                            </DockPanel>
                                                        </Expander.Header>

                                                        <DockPanel>
                                                            <ItemsPresenter DockPanel.Dock="Top" />
                                                            <Button Command="{Binding Name.AddCommand}"
                                                                    DockPanel.Dock="Bottom" Margin="0 0 0 4"
                                                                    HorizontalAlignment="Right"
                                                                    Visibility="{Binding Name.AddHeader, Converter={StaticResource NotNullToVisibilityConverter}, FallbackValue=Collapsed}"
                                                                    Style="{DynamicResource ImageButtonStyle}">
                                                                <TextBlock>
                                                                    <Run Text="{Binding Name.AddHeader}" />
                                                                    <Run
                                                                        Text="{x:Static core:SixIconFont.withSIX_icon_Add}"
                                                                        FontFamily="{DynamicResource IconFont}" />
                                                                </TextBlock>
                                                            </Button>
                                                        </DockPanel>
                                                    </Expander>
                                                </ControlTemplate>
                                            </TreeView.Resources>

                                            <TreeView.ItemContainerStyle>
                                                <Style TargetType="{x:Type TreeViewItem}"
                                                       BasedOn="{StaticResource {x:Type TreeViewItem}}">
                                                    <Setter Property="Foreground"
                                                            Value="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeView}}" />
                                                    <Setter Property="Tag"
                                                            Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeView}}" />
                                                    <Setter Property="IsSelected"
                                                            Value="{Binding IsSelected, Mode=TwoWay}" />
                                                    <Setter Property="IsExpanded"
                                                            Value="{Binding IsExpanded, Mode=TwoWay}" />
                                                    <Setter Property="ContextMenu"
                                                            Value="{StaticResource TreeContextMenu}" />
                                                    <Setter Property="BorderThickness" Value="0 0 0 2" />
                                                    <!-- use at bottom for the selection awesome effect -->
                                                    <Setter Property="Padding" Value="2 4 8 4" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="Auto" />
                                                                        <ColumnDefinition Width="*" />
                                                                    </Grid.ColumnDefinitions>
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="Auto" />
                                                                        <RowDefinition />
                                                                    </Grid.RowDefinitions>
                                                                    <!--
                        Note that the following do not work, but I believe the top 2 should?!
                        <ToggleButton IsChecked="{TemplateBinding IsExpanded}" ClickMode="Press" Name="Expander">
                        <ToggleButton IsChecked="{TemplateBinding Property=IsExpanded}" ClickMode="Press" Name="Expander">
                        <ToggleButton IsChecked="{TemplateBinding Path=IsExpanded}" ClickMode="Press" Name="Expander">
                -->
                                                                    <ToggleButton
                                                                        IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                                        ClickMode="Press"
                                                                        x:Name="Expander">
                                                                        <ToggleButton.Style>
                                                                            <Style TargetType="{x:Type ToggleButton}">
                                                                                <Setter Property="Focusable"
                                                                                        Value="false" />
                                                                                <Setter Property="Width"
                                                                                        Value="16" />
                                                                                <Setter Property="Height"
                                                                                        Value="16" />
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate
                                                                                            TargetType="{x:Type ToggleButton}">
                                                                                            <Border Padding="5,5,5,5"
                                                                                                    Background="#00FFFFFF"
                                                                                                    Width="16"
                                                                                                    Height="16">
                                                                                                <Path Fill="#00FFFFFF"
                                                                                                      Stroke="#FF989898"
                                                                                                      x:Name="ExpandPath">
                                                                                                    <Path.Data>
                                                                                                        <PathGeometry
                                                                                                            Figures="M0,0L0,6L6,0z" />
                                                                                                    </Path.Data>
                                                                                                    <Path.RenderTransform>
                                                                                                        <RotateTransform
                                                                                                            Angle="135"
                                                                                                            CenterX="3"
                                                                                                            CenterY="3" />
                                                                                                    </Path.RenderTransform>
                                                                                                </Path>
                                                                                            </Border>
                                                                                            <ControlTemplate.Triggers>
                                                                                                <Trigger
                                                                                                    Property="IsMouseOver"
                                                                                                    Value="True">
                                                                                                    <Setter
                                                                                                        TargetName="ExpandPath"
                                                                                                        Property="Stroke"
                                                                                                        Value="#FF1BBBFA" />
                                                                                                    <Setter
                                                                                                        TargetName="ExpandPath"
                                                                                                        Property="Fill"
                                                                                                        Value="#00FFFFFF" />
                                                                                                </Trigger>
                                                                                                <Trigger
                                                                                                    Property="IsChecked"
                                                                                                    Value="True">
                                                                                                    <Setter
                                                                                                        TargetName="ExpandPath"
                                                                                                        Property="RenderTransform">
                                                                                                        <Setter.Value>
                                                                                                            <RotateTransform
                                                                                                                Angle="180"
                                                                                                                CenterX="3"
                                                                                                                CenterY="3" />
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                    <Setter
                                                                                                        TargetName="ExpandPath"
                                                                                                        Property="Fill"
                                                                                                        Value="#FF595959" />
                                                                                                    <Setter
                                                                                                        TargetName="ExpandPath"
                                                                                                        Property="Stroke"
                                                                                                        Value="#FF262626" />
                                                                                                </Trigger>
                                                                                            </ControlTemplate.Triggers>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </ToggleButton.Style>
                                                                    </ToggleButton>
                                                                    <Border x:Name="Border"
                                                                            HorizontalAlignment="Stretch"
                                                                            BorderThickness="{TemplateBinding Border.BorderThickness}"
                                                                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                                                                            Padding="{TemplateBinding Padding}"
                                                                            Background="{TemplateBinding Panel.Background}"
                                                                            SnapsToDevicePixels="True"
                                                                            Grid.Column="1">
                                                                        <ContentPresenter x:Name="PART_Header"
                                                                                          Content="{TemplateBinding HeaderedContentControl.Header}"
                                                                                          ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                                                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                                                          ContentSource="Header"
                                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    </Border>
                                                                    <DockPanel Grid.Column="1"
                                                                               Grid.Row="1">
                                                                        <ItemsPresenter x:Name="ItemsHost"
                                                                                        DockPanel.Dock="Top" />
                                                                        <Button Command="{Binding AddCommand}"
                                                                                DockPanel.Dock="Bottom"
                                                                                Margin="0 0 0 8"
                                                                                HorizontalAlignment="Right"
                                                                                Visibility="{Binding AddHeader, Converter={StaticResource NotNullToVisibilityConverter}, FallbackValue=Collapsed}"
                                                                                Style="{DynamicResource ImageButtonStyle}">
                                                                            <TextBlock>
                                                                                <Run Text="{Binding AddHeader}" />
                                                                                <Run
                                                                                    Text="{x:Static core:SixIconFont.withSIX_icon_Add}"
                                                                                    FontFamily="{DynamicResource IconFont}" />
                                                                            </TextBlock>
                                                                        </Button>
                                                                    </DockPanel>

                                                                </Grid>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsExpanded"
                                                                             Value="False">
                                                                        <Setter TargetName="ItemsHost"
                                                                                Property="Visibility"
                                                                                Value="Collapsed" />
                                                                    </Trigger>

                                                                    <Trigger Property="HasItems"
                                                                             Value="False">
                                                                        <Setter TargetName="Expander"
                                                                                Property="Visibility"
                                                                                Value="Hidden" />
                                                                    </Trigger>

                                                                    <Trigger SourceName="Border"
                                                                             Property="IsMouseOver"
                                                                             Value="True">
                                                                        <Setter TargetName="Border"
                                                                                Property="BorderBrush"
                                                                                Value="{DynamicResource AccentColorBrush3}" />
                                                                        <!--
                                                        <Setter Property="Foreground"
                                                                Value="{DynamicResource BlackColorBrush}" />
-->
                                                                    </Trigger>
                                                                    <Trigger Property="IsSelected"
                                                                             Value="True">
                                                                        <Setter TargetName="Border"
                                                                                Property="Background"
                                                                                Value="{DynamicResource AccentColorBrush}" />
                                                                        <Setter Property="Foreground"
                                                                                Value="{DynamicResource IdealForegroundColorBrush}" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled"
                                                                             Value="False">
                                                                        <Setter Property="Foreground"
                                                                                Value="{DynamicResource GrayBrush7}" />
                                                                    </Trigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsEnabled"
                                                                                       Value="False" />
                                                                            <Condition Property="IsSelected"
                                                                                       Value="True" />
                                                                        </MultiTrigger.Conditions>
                                                                        <MultiTrigger.Setters>
                                                                            <Setter TargetName="Border"
                                                                                    Property="Background"
                                                                                    Value="{DynamicResource GrayBrush7}" />
                                                                            <Setter Property="Foreground"
                                                                                    Value="{DynamicResource AccentSelectedColorBrush}" />
                                                                        </MultiTrigger.Setters>
                                                                    </MultiTrigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsSelected"
                                                                                       Value="True" />
                                                                            <Condition
                                                                                Property="Selector.IsSelectionActive"
                                                                                Value="True" />
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter TargetName="Border"
                                                                                Property="Background"
                                                                                Value="{DynamicResource AccentColorBrush2}" />
                                                                    </MultiTrigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsRoot}" Value="True">
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                                                        <Grid>
                                                                            <Grid.Style>
                                                                                <!-- Cheat -->
                                                                                <Style TargetType="{x:Type Grid}">
                                                                                    <Setter Property="Margin"
                                                                                            Value="0 16 0 0" />
                                                                                    <Style.Triggers>
                                                                                        <DataTrigger
                                                                                            Binding="{Binding AddHeader}"
                                                                                            Value="{x:Null}">
                                                                                            <Setter Property="Margin"
                                                                                                    Value="0" />
                                                                                        </DataTrigger>
                                                                                        <DataTrigger
                                                                                            Binding="{Binding IsHead}"
                                                                                            Value="True">
                                                                                            <Setter Property="Margin"
                                                                                                    Value="0 8 0 0" />
                                                                                        </DataTrigger>
                                                                                    </Style.Triggers>
                                                                                </Style>
                                                                            </Grid.Style>
                                                                            <Grid.RowDefinitions>
                                                                                <RowDefinition Height="Auto" />
                                                                                <RowDefinition />
                                                                            </Grid.RowDefinitions>
                                                                            <!--
                        Note that the following do not work, but I believe the top 2 should?!
                        <ToggleButton IsChecked="{TemplateBinding IsExpanded}" ClickMode="Press" Name="Expander">
                        <ToggleButton IsChecked="{TemplateBinding Property=IsExpanded}" ClickMode="Press" Name="Expander">
                        <ToggleButton IsChecked="{TemplateBinding Path=IsExpanded}" ClickMode="Press" Name="Expander">
                -->
                                                                            <Border x:Name="Border"
                                                                                    HorizontalAlignment="Stretch"
                                                                                    BorderThickness="{TemplateBinding Border.BorderThickness}"
                                                                                    BorderBrush="{TemplateBinding Border.BorderBrush}"
                                                                                    Padding="{TemplateBinding Padding}"
                                                                                    Background="{TemplateBinding Panel.Background}"
                                                                                    SnapsToDevicePixels="True">
                                                                                <Grid>
                                                                                    <Grid.ColumnDefinitions>
                                                                                        <ColumnDefinition Width="*" />
                                                                                        <ColumnDefinition Width="Auto" />
                                                                                    </Grid.ColumnDefinitions>

                                                                                    <ContentPresenter
                                                                                        x:Name="PART_Header"
                                                                                        Grid.Column="0"
                                                                                        Content="{TemplateBinding HeaderedContentControl.Header}"
                                                                                        ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                                                                        ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                                                        ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                                                        ContentSource="Header"
                                                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                                                                    <ToggleButton Grid.Column="1"
                                                                                                  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                                                                  ClickMode="Press"
                                                                                                  HorizontalAlignment="Right"
                                                                                                  x:Name="Expander">
                                                                                        <ToggleButton.Style>
                                                                                            <Style
                                                                                                TargetType="{x:Type ToggleButton}">
                                                                                                <Setter
                                                                                                    Property="Focusable"
                                                                                                    Value="false" />
                                                                                                <Setter
                                                                                                    Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate
                                                                                                            TargetType="{x:Type ToggleButton}">
                                                                                                            <TextBlock
                                                                                                                Text="{x:Static core:SixIconFont.withSIX_icon_Arrow_Down_Dir}"
                                                                                                                FontSize="16"
                                                                                                                x:Name="tb"
                                                                                                                Style="{DynamicResource TextBlockIconStyle}"
                                                                                                                HorizontalAlignment="Right" />
                                                                                                            <ControlTemplate.Triggers>
                                                                                                                <Trigger
                                                                                                                    Property="IsChecked"
                                                                                                                    Value="True">
                                                                                                                    <Setter
                                                                                                                        TargetName="tb"
                                                                                                                        Property="Text"
                                                                                                                        Value="{x:Static core:SixIconFont.withSIX_icon_Arrow_Up_Dir}" />
                                                                                                                </Trigger>
                                                                                                            </ControlTemplate.Triggers>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </ToggleButton.Style>
                                                                                    </ToggleButton>
                                                                                </Grid>
                                                                            </Border>

                                                                            <DockPanel Grid.Row="1">
                                                                                <ItemsPresenter x:Name="ItemsHost"
                                                                                                DockPanel.Dock="Top" />
                                                                                <Button Command="{Binding AddCommand}"
                                                                                        DockPanel.Dock="Bottom"
                                                                                        Margin="0 0 0 8"
                                                                                        HorizontalAlignment="Right"
                                                                                        Visibility="{Binding AddHeader, Converter={StaticResource NotNullToVisibilityConverter}, FallbackValue=Collapsed}"
                                                                                        Style="{DynamicResource ImageButtonStyle}">
                                                                                    <TextBlock>
                                                                                        <Run Text="{Binding AddHeader}" />
                                                                                        <Run
                                                                                            Text="{x:Static core:SixIconFont.withSIX_icon_Add}"
                                                                                            FontFamily="{DynamicResource IconFont}" />
                                                                                    </TextBlock>
                                                                                </Button>
                                                                            </DockPanel>

                                                                        </Grid>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsExpanded"
                                                                                     Value="False">
                                                                                <Setter TargetName="ItemsHost"
                                                                                        Property="Visibility"
                                                                                        Value="Collapsed" />
                                                                            </Trigger>

                                                                            <Trigger Property="HasItems"
                                                                                     Value="False">
                                                                                <Setter TargetName="Expander"
                                                                                        Property="Visibility"
                                                                                        Value="Collapsed" />
                                                                            </Trigger>

                                                                            <Trigger SourceName="Border"
                                                                                     Property="IsMouseOver"
                                                                                     Value="True">
                                                                                <Setter TargetName="Border"
                                                                                        Property="BorderBrush"
                                                                                        Value="{DynamicResource AccentColorBrush3}" />
                                                                                <!--
                                                        <Setter Property="Foreground"
                                                                Value="{DynamicResource BlackColorBrush}" />
-->
                                                                            </Trigger>
                                                                            <Trigger Property="IsSelected"
                                                                                     Value="True">
                                                                                <Setter TargetName="Border"
                                                                                        Property="Background"
                                                                                        Value="{DynamicResource AccentColorBrush}" />
                                                                                <Setter Property="Foreground"
                                                                                        Value="{DynamicResource IdealForegroundColorBrush}" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled"
                                                                                     Value="False">
                                                                                <Setter Property="Foreground"
                                                                                        Value="{DynamicResource GrayBrush7}" />
                                                                            </Trigger>
                                                                            <MultiTrigger>
                                                                                <MultiTrigger.Conditions>
                                                                                    <Condition Property="IsEnabled"
                                                                                               Value="False" />
                                                                                    <Condition Property="IsSelected"
                                                                                               Value="True" />
                                                                                </MultiTrigger.Conditions>
                                                                                <MultiTrigger.Setters>
                                                                                    <Setter TargetName="Border"
                                                                                            Property="Background"
                                                                                            Value="{DynamicResource GrayBrush7}" />
                                                                                    <Setter Property="Foreground"
                                                                                            Value="{DynamicResource AccentSelectedColorBrush}" />
                                                                                </MultiTrigger.Setters>
                                                                            </MultiTrigger>
                                                                            <MultiTrigger>
                                                                                <MultiTrigger.Conditions>
                                                                                    <Condition Property="IsSelected"
                                                                                               Value="True" />
                                                                                    <Condition
                                                                                        Property="Selector.IsSelectionActive"
                                                                                        Value="True" />
                                                                                </MultiTrigger.Conditions>
                                                                                <Setter TargetName="Border"
                                                                                        Property="Background"
                                                                                        Value="{DynamicResource AccentColorBrush2}" />
                                                                            </MultiTrigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TreeView.ItemContainerStyle>

                                            <TreeView.GroupStyle>
                                                <GroupStyle HidesIfEmpty="False">
                                                    <GroupStyle.ContainerStyle>
                                                        <Style TargetType="{x:Type GroupItem}">
                                                            <Setter Property="Template"
                                                                    Value="{DynamicResource DefaultTemplate}" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Name.Header}"
                                                                             Value="{x:Null}">
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate
                                                                                TargetType="{x:Type GroupItem}">
                                                                                <ItemsPresenter />
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Name}" Value="{x:Null}">
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate
                                                                                TargetType="{x:Type GroupItem}">
                                                                                <DockPanel>
                                                                                    <ItemsPresenter
                                                                                        DockPanel.Dock="Top" />
                                                                                    <Border DockPanel.Dock="Top"
                                                                                            Margin="8 4"
                                                                                            BorderThickness="0 1 0 1"
                                                                                            BorderBrush="{DynamicResource SixLightGray}"
                                                                                            Visibility="{Binding Items.Count, Converter={StaticResource NonZeroToVisibilityCollapsedConverter}}" />
                                                                                </DockPanel>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </GroupStyle.ContainerStyle>
                                                </GroupStyle>
                                            </TreeView.GroupStyle>
                                        </TreeView>

                                        <Expander HorizontalAlignment="Stretch" IsExpanded="True"
                                                  ContentTemplate="{TemplateBinding FilterTemplate}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  Content="{Binding SelectedItem.Filter}"
                                                  HorizontalContentAlignment="Stretch"
                                                  Style="{DynamicResource ExpanderStyle}"
                                                  Visibility="{TemplateBinding IntegratedFilters, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                                            <Expander.Header>
                                                <DockPanel>
                                                    <TextBlock Text="Filters" DockPanel.Dock="Left" />
                                                    <TextBlock Text=" (active)"
                                                               Visibility="{Binding SelectedItem.Filter.Filtered, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"
                                                               FontStyle="Italic" />
                                                    <Button Content="Reset"
                                                            Style="{DynamicResource MetroTextButtonStyle}"
                                                            HorizontalAlignment="Right"
                                                            Command="{Binding ResetFiltersCommand}"
                                                            DockPanel.Dock="Right" />
                                                </DockPanel>
                                            </Expander.Header>
                                        </Expander>
                                    </DockPanel>
                                </Grid>
                            </TabItem>

                            <TabItem
                                Visibility="{TemplateBinding IntegratedFilters, Converter={StaticResource BooleanToVisibilityCollapsedConverter}, ConverterParameter=True}"
                                ContentTemplate="{TemplateBinding FilterTemplate}"
                                Content="{Binding SelectedItem.Filter}">
                                <TabItem.Header>
                                    <DockPanel>
                                        <Border ToolTip="{Binding Text, ElementName=tbFilter}" Background="Transparent">
                                            <TextBlock Style="{DynamicResource TabItemHeaderIconStyle}"
                                                       Foreground="{TemplateBinding Foreground}"
                                                       Text="{x:Static core:SixIconFont.withSIX_icon_Filter}" />
                                        </Border>
                                        <TextBlock x:Name="tbFilter" Text="Filter" Margin="4 0 0 0"
                                                   VerticalAlignment="Center"
                                                   Foreground="{TemplateBinding Foreground}"
                                                   Style="{DynamicResource TabItemHeaderTextStyle}" />
                                    </DockPanel>
                                </TabItem.Header>
                            </TabItem>
                        </TabControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>