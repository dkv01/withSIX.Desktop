<UserControl x:Class="SN.withSIX.Play.Presentation.Wpf.Views.Games.Library.LibraryItemView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:games="clr-namespace:SN.withSIX.Play.Applications.ViewModels.Games;assembly=SN.withSIX.Play.Applications"
             xmlns:library="clr-namespace:SN.withSIX.Play.Applications.ViewModels.Games.Library;assembly=SN.withSIX.Play.Applications"
             mc:Ignorable="d" d:DataContext="{d:DesignInstance library:LibraryItemViewModel}"
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid Margin="8">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="24" />
            <ColumnDefinition Width="8" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="8" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <TextBlock Text="{Binding Icon}" FontSize="16">
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockIconStyle}">
                    <Setter Property="Foreground"
                            Value="{Binding IconForeground, FallbackValue={StaticResource SixGray}}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IconForeground}" Value="{x:Null}">
                            <Setter Property="Foreground"
                                    Value="{Binding Model.State, Converter={StaticResource ModStateToBrushConverter}, FallbackValue={StaticResource SixGray}}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <StackPanel Grid.Column="2">
            <!-- TODO: import Model.Name instead into the object! then we can also diplsay group headers properly -->
            <TextBlock Text="{Binding Model.Name}" TextTrimming="CharacterEllipsis" />
            <TextBlock Text="{Binding SubHeader}" TextTrimming="CharacterEllipsis" />
            <TextBlock Text="{Binding Description}" TextTrimming="CharacterEllipsis" />
        </StackPanel>

        <StackPanel Orientation="Horizontal" Grid.Column="4" VerticalAlignment="Center">
            <TextBlock HorizontalAlignment="Center"
                       Text="{Binding ItemsView.Count, StringFormat={}{0} items}" />
            <TextBlock Text="{Binding Children.Count, StringFormat={} [{0}]}">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Visibility"
                                Value="{Binding Children.Count, Converter={StaticResource NonZeroToVisibilityCollapsedConverter}}" />
                        <!-- Hack -->
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ShowItemsInTree}"
                                         Value="True">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

        </StackPanel>
    </Grid>
</UserControl>