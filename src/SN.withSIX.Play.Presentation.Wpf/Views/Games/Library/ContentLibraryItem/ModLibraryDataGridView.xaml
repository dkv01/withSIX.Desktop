<library:DataGridView
    x:Class="SN.withSIX.Play.Presentation.Wpf.Views.Games.Library.ContentLibraryItem.ModLibraryDataGridView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:core="clr-namespace:SN.withSIX.Core.Applications;assembly=SN.withSIX.Core.Applications"
    xmlns:cal="http://www.caliburnproject.org"
    xmlns:dragDrop="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
    xmlns:games="clr-namespace:SN.withSIX.Play.Applications.ViewModels.Games;assembly=SN.withSIX.Play.Applications"
    xmlns:library1="clr-namespace:SN.withSIX.Play.Applications.ViewModels.Games.Library;assembly=SN.withSIX.Play.Applications"
    xmlns:library="clr-namespace:SN.withSIX.Play.Presentation.Wpf.Views.Games.Library"
    xmlns:controls="clr-namespace:SN.withSIX.Core.Presentation.Wpf.Views.Controls;assembly=SN.withSIX.Core.Presentation.Wpf"
    xmlns:controls1="clr-namespace:SN.withSIX.Play.Presentation.Wpf.Views.Controls"
    mc:Ignorable="d"
    d:DesignHeight="300" d:DesignWidth="300"
    d:DataContext="{d:DesignInstance library1:ContentLibraryItemViewModel}">

    <DataGrid ItemsSource="{Binding ItemsView}" x:Name="dg"
              SelectedItem="{Binding SelectedItem}" SelectionMode="Extended" dragDrop:DragDrop.IsDragSource="True"
              IsSynchronizedWithCurrentItem="False"
              Style="{StaticResource LibraryDataGridStyle}"
              cal:Message.Attach="[Event MouseDoubleClick] = [Action DoubleClickedDG($eventArgs)]">

        <DataGrid.RowStyle>
            <Style TargetType="{x:Type DataGridRow}"
                   BasedOn="{StaticResource MetroDataGridRow}">
                <Style.Resources>
                    <ContextMenu x:Key="ContentContextMenu" x:Shared="true"
                                 DataContext="{Binding PlacementTarget.Tag.ContextMenu, RelativeSource={RelativeSource Self}}" />
                </Style.Resources>
                <Setter Property="ContextMenu" Value="{StaticResource ContentContextMenu}" />
                <Setter Property="Tag"
                        Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" />
            </Style>
        </DataGrid.RowStyle>

        <DataGrid.Columns>
            <DataGridTemplateColumn IsReadOnly="False" SortMemberPath="IsFavorite" Width="24">
                <DataGridTemplateColumn.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock Text="{x:Static core:SixIconFont.withSIX_icon_Star}"
                                   Style="{StaticResource TextBlockIconStyle}" Foreground="{StaticResource SixGray}" />
                    </DataTemplate>
                </DataGridTemplateColumn.HeaderTemplate>
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <controls:FavoriteToggleButton FontSize="16"
                                                       Command="{Binding DataContext.ToggleFavorite, RelativeSource={RelativeSource FindAncestor, AncestorType=library:ModLibraryView}}"
                                                       IsFavorite="{Binding IsFavorite, Mode=OneWay}" />
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>

            <DataGridTemplateColumn IsReadOnly="True" Header="Name" SortMemberPath="FullName">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <controls1:ModTitleControl DockPanel.Dock="Top" />
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>

            <DataGridTemplateColumn IsReadOnly="True" SortMemberPath="State">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <TextBlock Style="{StaticResource ContentStateIconStyle}" DataContext="{Binding State}" />
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>

            <!-- ToolTip="{Binding SizeWd, Converter={StaticResource SizeConverter}, StringFormat={}{0} unpacked}" -->
            <DataGridTextColumn IsReadOnly="True" Header="Size"
                                Binding="{Binding Size, Converter={StaticResource SizeConverter}}" />

            <DataGridTemplateColumn>
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <Button Style="{StaticResource ModOmniButtonStyle}" />
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>

            <DataGridTemplateColumn IsReadOnly="True" Header="Version info">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <DockPanel>
                            <TextBlock
                                Visibility="{Binding IsCustomContent, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"
                                Margin="0 0 4 0"
                                Text="{x:Static core:SixIconFont.withSIX_icon_Cloud}"
                                ToolTip="This content is hosted by a custom repository. SIX Networks can not take responsibility for the quality of the content, or the download experience"
                                FontFamily="{StaticResource IconFont}" FontSize="16" />
                            <TextBlock FontStyle="Italic">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}"
                                           BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Setter Property="Text"
                                                Value="{Binding Controller.Revision, StringFormat={}v{0}}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding State}" Value="Unverified">
                                                <Setter Property="Text" Value="unverified" />
                                                <Setter Property="ToolTip"
                                                        Value="we detected the mod but are not able to verify it's integrity. Diagnose it to convert it" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding State}" Value="Local">
                                                <Setter Property="Text" Value="local" />
                                                <Setter Property="ToolTip"
                                                        Value="this mod is not known to the network and therefore we cannot guarantee it's integrity" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding State}" Value="NotInstalled">
                                                <Setter Property="Text" Value="not installed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <TextBlock Text="{x:Static core:SixIconFont.withSIX_icon_Lock}"
                                       Margin="4 0 0 0"
                                       FontFamily="{StaticResource IconFont}"
                                       ToolTip="You've locked the version. Put it back to 'latest' to automatically get the latest available version">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}"
                                           BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Style.Triggers>
                                            <DataTrigger
                                                Binding="{Binding Controller.Package.IsLatestSelected}"
                                                Value="True">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger
                                                Binding="{Binding Controller.Package}"
                                                Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <DockPanel Margin="4 0 0 0">
                                <DockPanel.Style>
                                    <Style TargetType="{x:Type DockPanel}">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Controller.NewerVersionAvailable}"
                                                               Value="False" />
                                                    <Condition
                                                        Binding="{Binding Controller.Package.ActualPackages.Count}"
                                                        Value="0" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Controller.NewerVersionAvailable}"
                                                               Value="False" />
                                                    <Condition
                                                        Binding="{Binding Controller.Package.ActualPackages.Count}"
                                                        Value="1" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DockPanel.Style>

                                <!-- 
                                <TextBlock Text="[ " />
                                -->

                                <TextBlock
                                    Visibility="{Binding Controller.NewerVersionAvailable, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"
                                    FontStyle="Italic"
                                    Foreground="{StaticResource SixOrange}"
                                    Text="{Binding Controller.LatestRevision, StringFormat={}latest v{0}}"
                                    x:Name="v1">
                                    <TextBlock.ToolTip>
                                        <TextBlock
                                            Text="{Binding UpdatedVersion, Converter={StaticResource UTCToLocalTimeSmartConverter}}" />
                                    </TextBlock.ToolTip>
                                </TextBlock>

                                <!-- TODO: Margin only if the previous item exists? -->
                                <TextBlock Margin="4 0 0 0" FontStyle="Italic"
                                           Text="{Binding Controller.DesiredRevision, StringFormat={}{0} selected}"
                                           x:Name="v2">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}"
                                               BasedOn="{StaticResource {x:Type TextBlock}}">
                                            <Setter Property="Visibility"
                                                    Value="{Binding State, Converter={StaticResource ModStateToVisibilityConverter}, FallbackValue=Collapsed}" />
                                            <Style.Triggers>
                                                <DataTrigger Value="True">
                                                    <DataTrigger.Binding>
                                                        <MultiBinding Converter="{StaticResource AreEqualConverter}">
                                                            <Binding Path="Controller.DesiredRevision" />
                                                            <Binding Path="Controller.LatestRevision" />
                                                        </MultiBinding>
                                                    </DataTrigger.Binding>
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                    <TextBlock.ToolTip>
                                        <ToolTip>
                                            <TextBlock>
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="Text">
                                                            <Setter.Value>
                                                                <MultiBinding
                                                                    StringFormat="{}Update from {0} to {1}">
                                                                    <Binding Path="Controller.Revision" />
                                                                    <Binding
                                                                        Path="Controller.DesiredRevision" />
                                                                </MultiBinding>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <DataTrigger
                                                                Binding="{Binding Controller.Revision}"
                                                                Value="{x:Null}">
                                                                <Setter Property="Text" Value="" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </ToolTip>
                                    </TextBlock.ToolTip>
                                </TextBlock>

                                <DockPanel>
                                    <DockPanel.Style>
                                        <Style TargetType="{x:Type DockPanel}">
                                            <Setter Property="Visibility"
                                                    Value="{Binding Controller.Package.ActualPackages.Count, Converter={StaticResource MoreThanOneToVisibilityCollapsedConverter}, FallbackValue=Collapsed}" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding Controller.Package.IsLatestSelected}"
                                                    Value="False">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DockPanel.Style>

                                    <TextBlock Text="|" Margin="4 0">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}"
                                                   BasedOn="{StaticResource {x:Type TextBlock}}">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=v1, Path=Visibility}"
                                                                 Value="Visible">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ElementName=v2, Path=Visibility}"
                                                                 Value="Visible">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>

                                    <Button cal:Message.Attach="ShowVersion($dataContext)"
                                            HorizontalAlignment="Left" Padding="0"
                                            Visibility="{Binding State, Converter={StaticResource LocalModVisibilityConverter}, FallbackValue=Collapsed}"
                                            Style="{StaticResource MetroTextButtonStyle}">
                                        <!-- using a text block fixes the highlight color?! -->
                                        <TextBlock>
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Setter Property="Text" Value="change version" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding State}" Value="NotInstalled">
                                                            <Setter Property="Text" Value="select version" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Button>
                                </DockPanel>
                                <!-- 
                                <TextBlock Text=" ]" />
                                -->
                            </DockPanel>
                        </DockPanel>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>

            <DataGridTextColumn IsReadOnly="True" Header="Tags"
                                Binding="{Binding Categories, Converter={StaticResource EnumerableToStringConverter}}" />
        </DataGrid.Columns>
    </DataGrid>
</library:DataGridView>