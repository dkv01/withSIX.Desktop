<library:DataGridView
    x:Class="SN.withSIX.Play.Presentation.Wpf.Views.Games.Library.ServerLibraryItem.ServerLibraryDataGridView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:cal="http://www.caliburnproject.org"
    xmlns:core="clr-namespace:SN.withSIX.Core.Applications;assembly=SN.withSIX.Core.Applications"
    xmlns:games="clr-namespace:SN.withSIX.Play.Applications.ViewModels.Games;assembly=SN.withSIX.Play.Applications"
    xmlns:library1="clr-namespace:SN.withSIX.Play.Applications.ViewModels.Games.Library;assembly=SN.withSIX.Play.Applications"
    xmlns:library="clr-namespace:SN.withSIX.Play.Presentation.Wpf.Views.Games.Library"
    xmlns:controls="clr-namespace:SN.withSIX.Core.Presentation.Wpf.Views.Controls;assembly=SN.withSIX.Core.Presentation.Wpf"
    xmlns:controls1="clr-namespace:SN.withSIX.Play.Presentation.Wpf.Views.Controls"
    mc:Ignorable="d"
    d:DesignHeight="300" d:DesignWidth="300"
    d:DataContext="{d:DesignInstance library1:ServerLibraryItemViewModel}">

    <DataGrid x:Name="dg" ItemsSource="{Binding ItemsView}"
              SelectedItem="{Binding SelectedItem}" SelectionMode="Single"
              IsSynchronizedWithCurrentItem="False"
              Style="{StaticResource LibraryDataGridStyle}"
              cal:Message.Attach="[Event MouseDoubleClick] = [Action DoubleClickedDG($eventArgs)]">

        <DataGrid.GroupStyle>
            <GroupStyle ContainerStyle="{StaticResource DataGridGroupStyle}" />
        </DataGrid.GroupStyle>

        <DataGrid.RowStyle>
            <Style TargetType="{x:Type DataGridRow}"
                   BasedOn="{StaticResource MetroDataGridRow}">
                <Style.Resources>
                    <ContextMenu x:Key="ContentContextMenu" x:Shared="true"
                                 DataContext="{Binding PlacementTarget.Tag.ContextMenu, RelativeSource={RelativeSource Self}}" />
                </Style.Resources>
                <Setter Property="ContextMenu" Value="{StaticResource ContentContextMenu}" />
                <Setter Property="Tag"
                        Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" />
            </Style>
        </DataGrid.RowStyle>

        <DataGrid.Columns>
            <DataGridTemplateColumn IsReadOnly="False">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <Grid Margin="4 0 0 0">
                            <Viewbox Height="14" VerticalAlignment="Center"
                                     HorizontalAlignment="Center">
                                <RadioButton
                                    cal:Message.Attach="[Event Click] = [Action ActivateItem($dataContext)]">
                                    <RadioButton.Style>
                                        <Style TargetType="{x:Type RadioButton}"
                                               BasedOn="{StaticResource {x:Type RadioButton}}">
                                            <Style.Triggers>
                                                <DataTrigger Value="True">
                                                    <DataTrigger.Binding>
                                                        <MultiBinding
                                                            Converter="{StaticResource AreEqualConverter}">
                                                            <Binding
                                                                Path="DataContext.ActiveItem"
                                                                RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type library:ServerLibraryView}}" />
                                                            <Binding />
                                                        </MultiBinding>
                                                    </DataTrigger.Binding>
                                                    <Setter Property="IsChecked"
                                                            Value="True" />
                                                </DataTrigger>
                                                <DataTrigger Value="False">
                                                    <DataTrigger.Binding>
                                                        <MultiBinding
                                                            Converter="{StaticResource AreEqualConverter}">
                                                            <Binding
                                                                Path="DataContext.ActiveItem"
                                                                RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type library:ServerLibraryView}}" />
                                                            <Binding />
                                                        </MultiBinding>
                                                    </DataTrigger.Binding>
                                                    <Setter Property="IsChecked"
                                                            Value="False" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </RadioButton.Style>
                                </RadioButton>
                            </Viewbox>
                        </Grid>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>

            <DataGridTemplateColumn IsReadOnly="False" SortMemberPath="IsFavorite" Width="24">
                <DataGridTemplateColumn.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock Text="{x:Static core:SixIconFont.withSIX_icon_Star}"
                                   Style="{StaticResource TextBlockIconStyle}" Foreground="{StaticResource SixGray}" />
                    </DataTemplate>
                </DataGridTemplateColumn.HeaderTemplate>
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <controls:FavoriteToggleButton FontSize="16"
                                                       Command="{Binding DataContext.ToggleFavorite, RelativeSource={RelativeSource FindAncestor, AncestorType=library:ServerLibraryView}}"
                                                       IsFavorite="{Binding IsFavorite, Mode=OneWay}" />
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>

            <DataGridTextColumn IsReadOnly="True" Binding="{Binding Name}" Header="Name"
                                Width="300">
                <!-- TODO: FilteredName as converter?? -->
                <!--
                <DataGridTextColumn.ElementStyle>
                    <Style TargetType="{x:Type TextBlock}"
                           BasedOn="{StaticResource {x:Type TextBlock}}">
                        <Setter Property="Foreground"
                                Value="{Binding UpdatedStatus,Converter={StaticResource UpdatedStatusConverter}}" />
                        <Setter Property="ToolTip" Value="{Binding Name}" />
                    </Style>
                </DataGridTextColumn.ElementStyle>
-->
            </DataGridTextColumn>

            <DataGridTextColumn IsReadOnly="True" Header="#"
                                SortMemberPath="NumPlayers"
                                Width="60">
                <DataGridTextColumn.HeaderStyle>
                    <Style TargetType="{x:Type DataGridColumnHeader}"
                           BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="ToolTip"
                                        Value="Number of players / Max players" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGridTextColumn.HeaderStyle>
                <DataGridTextColumn.Binding>
                    <MultiBinding StringFormat="{}{0}/{1}">
                        <Binding Path="NumPlayers" />
                        <Binding Path="MaxPlayers" />
                    </MultiBinding>
                </DataGridTextColumn.Binding>
                <DataGridTextColumn.ElementStyle>
                    <Style TargetType="{x:Type TextBlock}"
                           BasedOn="{StaticResource {x:Type TextBlock}}">
                        <Setter Property="ToolTip"
                                Value="{Binding Players, Converter={StaticResource PlayersToStringConverter}}" />
                        <Setter Property="Margin" Value="3,0,3,0" />
                        <Setter Property="HorizontalAlignment" Value="Right" />
                    </Style>
                </DataGridTextColumn.ElementStyle>
            </DataGridTextColumn>
            <DataGridTemplateColumn
                SortMemberPath="Ping"
                IsReadOnly="true" Width="50"
                Header="Ping">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <Grid>
                            <controls:Ping PingBinding="{Binding Ping}"
                                           ShowPingAsNumber="{Binding ShowPingAsNumber, RelativeSource={RelativeSource FindAncestor, AncestorType=library:ServerLibraryView}}"
                                           CountryBinding="{Binding Country}" />
                        </Grid>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>

            <DataGridTemplateColumn IsReadOnly="True" SortMemberPath="Country" Width="34"
                                    Header="Loc">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <controls1:CountryFlagView
                            Flag="{Binding Country, Converter={StaticResource CountryConverter}}"
                            ToolTip="{Binding Country}" />
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>

            <DataGridTemplateColumn IsReadOnly="True" SortMemberPath="Protection">
                <DataGridTemplateColumn.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock Text="P" ToolTip="Protection" />
                    </DataTemplate>
                </DataGridTemplateColumn.HeaderTemplate>
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <ContentControl
                            Content="{Binding Protection, Converter={StaticResource ServerProtectionLevels}}" />
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>

            <DataGridTemplateColumn IsReadOnly="True" SortMemberPath="PasswordRequired">
                <DataGridTemplateColumn.Header>
                    <Path
                        Data="F1M10.3281,7.6455L5.6731,7.6455L5.6731,4.8545L5.6841,4.8545C5.7771,3.6555,6.7781,2.7115,8.0001,2.7115C9.2231,2.7115,10.2241,3.6555,10.3161,4.8545L10.3281,4.8545z M9.3841,13.8795C9.4791,14.2155,9.4201,14.4435,9.0591,14.4435L8.0001,14.4435L6.9401,14.4435C6.5801,14.4435,6.5201,14.2155,6.6171,13.8795C6.6931,13.6105,7.0731,12.1365,7.2201,11.5705C6.7871,11.3065,6.4971,10.8315,6.4971,10.2865C6.4971,9.4565,7.1701,8.7825,8.0001,8.7825C8.8301,8.7825,9.5031,9.4565,9.5031,10.2865C9.5031,10.8315,9.2131,11.3065,8.7801,11.5705C8.9271,12.1365,9.3071,13.6105,9.3841,13.8795 M12.9831,7.6455L12.3551,7.6455L12.3551,4.8545C12.3551,2.4495,10.4051,0.4995,8.0001,0.4995C5.5961,0.4995,3.6451,2.4495,3.6451,4.8545L3.6451,7.6455L3.0171,7.6455C2.6401,7.6455,2.3321,7.9545,2.3321,8.3315L2.3321,14.8155C2.3321,15.1925,2.6401,15.5005,3.0171,15.5005L12.9831,15.5005C13.3601,15.5005,13.6691,15.1925,13.6691,14.8155L13.6691,8.3315C13.6691,7.9545,13.3601,7.6455,12.9831,7.6455"
                        Fill="#FF141414" Height="15.001" Canvas.Left="0" Stretch="Fill"
                        Canvas.Top="0"
                        Width="11.337" />
                </DataGridTemplateColumn.Header>
                <DataGridTemplateColumn.HeaderStyle>
                    <Style TargetType="{x:Type DataGridColumnHeader}"
                           BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="ToolTip" Value="Password protected?" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGridTemplateColumn.HeaderStyle>
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <Path
                            Data="F1M10.3281,7.6455L5.6731,7.6455L5.6731,4.8545L5.6841,4.8545C5.7771,3.6555,6.7781,2.7115,8.0001,2.7115C9.2231,2.7115,10.2241,3.6555,10.3161,4.8545L10.3281,4.8545z M9.3841,13.8795C9.4791,14.2155,9.4201,14.4435,9.0591,14.4435L8.0001,14.4435L6.9401,14.4435C6.5801,14.4435,6.5201,14.2155,6.6171,13.8795C6.6931,13.6105,7.0731,12.1365,7.2201,11.5705C6.7871,11.3065,6.4971,10.8315,6.4971,10.2865C6.4971,9.4565,7.1701,8.7825,8.0001,8.7825C8.8301,8.7825,9.5031,9.4565,9.5031,10.2865C9.5031,10.8315,9.2131,11.3065,8.7801,11.5705C8.9271,12.1365,9.3071,13.6105,9.3841,13.8795 M12.9831,7.6455L12.3551,7.6455L12.3551,4.8545C12.3551,2.4495,10.4051,0.4995,8.0001,0.4995C5.5961,0.4995,3.6451,2.4495,3.6451,4.8545L3.6451,7.6455L3.0171,7.6455C2.6401,7.6455,2.3321,7.9545,2.3321,8.3315L2.3321,14.8155C2.3321,15.1925,2.6401,15.5005,3.0171,15.5005L12.9831,15.5005C13.3601,15.5005,13.6691,15.1925,13.6691,14.8155L13.6691,8.3315C13.6691,7.9545,13.3601,7.6455,12.9831,7.6455"
                            Fill="#FF141414" Height="15.001" Canvas.Left="0"
                            Stretch="Fill"
                            Canvas.Top="0"
                            Width="11.337" />
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding PasswordRequired}"
                                         Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding PasswordRequired}"
                                         Value="False">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>

            <DataGridTemplateColumn IsReadOnly="True" SortMemberPath="IsOfficial">
                <DataGridTemplateColumn.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock Style="{StaticResource TextBlockIconStyle}"
                                   Text="{x:Static core:SixIconFont.withSIX_icon_Verified}"
                                   ToolTip="Official server" />
                    </DataTemplate>
                </DataGridTemplateColumn.HeaderTemplate>
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <Viewbox MaxHeight="14" ToolTip="Official server"
                                 Margin="0 0 4 0"
                                 Visibility="{Binding IsOfficial, Converter={StaticResource BooleanToVisibilityCollapsedConverter}, FallbackValue=Collapsed}">
                            <ContentControl Content="{StaticResource Icon_Verified}">
                                <ContentControl.Resources>
                                    <Style TargetType="{x:Type Path}">
                                        <Setter Property="Fill"
                                                Value="{StaticResource SixOrange}" />
                                    </Style>
                                </ContentControl.Resources>
                            </ContentControl>
                        </Viewbox>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>

            <DataGridTextColumn
                Binding="{Binding GameState, Converter={StaticResource GamestateConverter}}"
                IsReadOnly="true" Width="60"
                Header="State" />

            <DataGridTextColumn IsReadOnly="True" Binding="{Binding Mission}" Width="105"
                                Header="Mission">
                <DataGridTextColumn.ElementStyle>
                    <Style TargetType="{x:Type TextBlock}"
                           BasedOn="{StaticResource {x:Type TextBlock}}">
                        <Setter Property="ToolTip" Value="{Binding Mission}" />
                    </Style>
                </DataGridTextColumn.ElementStyle>
            </DataGridTextColumn>
            <DataGridTextColumn IsReadOnly="True" Binding="{Binding Island}" Width="85"
                                Header="Island">
                <DataGridTextColumn.ElementStyle>
                    <Style TargetType="{x:Type TextBlock}"
                           BasedOn="{StaticResource {x:Type TextBlock}}">
                        <Setter Property="ToolTip" Value="{Binding Island}" />
                    </Style>
                </DataGridTextColumn.ElementStyle>
            </DataGridTextColumn>
            <DataGridTextColumn IsReadOnly="True" Binding="{Binding GameType}" Width="50"
                                Header="Mode">
                <DataGridTextColumn.ElementStyle>
                    <Style TargetType="{x:Type TextBlock}"
                           BasedOn="{StaticResource {x:Type TextBlock}}">
                        <Setter Property="ToolTip" Value="{Binding GameType}" />
                    </Style>
                </DataGridTextColumn.ElementStyle>
            </DataGridTextColumn>

            <DataGridTextColumn
                Binding="{Binding Difficulty, Converter={StaticResource DifficultyConverter}}"
                Header="Difficulty"
                IsReadOnly="true" Width="60" />

            <DataGridTextColumn IsReadOnly="True" Header="Version" Binding="{Binding GameVer}" />

            <DataGridTextColumn
                Binding="{Binding ServerTime, StringFormat={}{0:HH:mm}}"
                IsReadOnly="True" Width="85" Header="Time" />
            <DataGridTextColumn
                Binding="{Binding LastJoinedOn, Converter={StaticResource TimeAgoConverter}}"
                IsReadOnly="True" Header="Last Joined" />
            <!-- Foreground="{Binding ServerTime, Converter={StaticResource TimeToColorConverter}}" -->

            <DataGridTemplateColumn IsReadOnly="True" SortMemberPath="HasNotes">
                <DataGridTemplateColumn.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock Style="{StaticResource TextBlockIconStyle}"
                                   Text="{x:Static core:SixIconFont.withSIX_icon_Notes}" />
                    </DataTemplate>
                </DataGridTemplateColumn.HeaderTemplate>
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <Button
                            Command="{Binding DataContext.Note, RelativeSource={RelativeSource AncestorType={x:Type library:ServerLibraryView}}}"
                            CommandParameter="{Binding}" Style="{StaticResource ImageButtonStyle}"
                            HorizontalAlignment="Center" VerticalAlignment="Center"
                            ToolTip="Server Note"
                            FontFamily="{StaticResource IconFont}"
                            Content="{x:Static core:SixIconFont.withSIX_icon_Notes}" />
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>

            <DataGridTemplateColumn>
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <Button Style="{StaticResource ProgressButtonStyle}"
                                Content="{x:Static core:SixIconFont.withSIX_icon_Synq}"
                                FontFamily="{StaticResource IconFont}"
                                Command="{Binding DataContext.UpdateCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=library:ServerLibraryView}}"
                                IsEnabled="{Binding IsUpdating, Converter={StaticResource InverseBooleanConverter}}"
                                Background="Transparent" CommandParameter="{Binding}" FontSize="16"
                                ToolTip="{Binding Synced}"
                                HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
        </DataGrid.Columns>
    </DataGrid>
</library:DataGridView>